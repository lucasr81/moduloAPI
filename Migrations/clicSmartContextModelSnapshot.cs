// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using moduloAPI.Context;

#nullable disable

namespace moduloAPI.Migrations
{
    [DbContext(typeof(clicSmartContext))]
    partial class clicSmartContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("moduloAPI.Entities.Aulas", b =>
                {
                    b.Property<int>("IdAula")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdAula"));

                    b.Property<int>("IdModulo")
                        .HasColumnType("int");

                    b.Property<int>("Tipo")
                        .HasColumnType("int");

                    b.HasKey("IdAula");

                    b.HasIndex("IdModulo");

                    b.ToTable("Aulas");
                });

            modelBuilder.Entity("moduloAPI.Entities.Cursos", b =>
                {
                    b.Property<int>("IdCurso")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdCurso"));

                    b.Property<string>("Categoria")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Descricao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Instrutor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Preco")
                        .HasColumnType("float");

                    b.HasKey("IdCurso");

                    b.ToTable("Cursos");
                });

            modelBuilder.Entity("moduloAPI.Entities.Modulo", b =>
                {
                    b.Property<int>("IdModulo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdModulo"));

                    b.Property<int>("IdCurso")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdModulo");

                    b.HasIndex("IdCurso");

                    b.ToTable("Modulo");
                });

            modelBuilder.Entity("moduloAPI.Entities.Questionario", b =>
                {
                    b.Property<int>("IdQuestionario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdQuestionario"));

                    b.Property<string>("Enunciado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IdQuestionManager")
                        .HasColumnType("int");

                    b.Property<string>("OpcaoCinco")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OpcaoDois")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OpcaoQuatro")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OpcaoTres")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OpcaoUm")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RespostaCorreta")
                        .HasColumnType("int");

                    b.Property<string>("UploadImagem")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdQuestionario");

                    b.HasIndex("IdQuestionManager");

                    b.ToTable("Questionario");
                });

            modelBuilder.Entity("moduloAPI.Entities.QuestionarioManager", b =>
                {
                    b.Property<int>("IdQuestionManager")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdQuestionManager"));

                    b.Property<int>("IdModulo")
                        .HasColumnType("int");

                    b.Property<bool>("LiberarQuestao")
                        .HasColumnType("bit");

                    b.HasKey("IdQuestionManager");

                    b.HasIndex("IdModulo");

                    b.ToTable("QuestionarioManager");
                });

            modelBuilder.Entity("moduloAPI.Entities.Aulas", b =>
                {
                    b.HasOne("moduloAPI.Entities.Modulo", "Modulo")
                        .WithMany("Aulas")
                        .HasForeignKey("IdModulo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Modulo");
                });

            modelBuilder.Entity("moduloAPI.Entities.Modulo", b =>
                {
                    b.HasOne("moduloAPI.Entities.Cursos", "Curso")
                        .WithMany()
                        .HasForeignKey("IdCurso")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Curso");
                });

            modelBuilder.Entity("moduloAPI.Entities.Questionario", b =>
                {
                    b.HasOne("moduloAPI.Entities.QuestionarioManager", "QuestionarioManager")
                        .WithMany()
                        .HasForeignKey("IdQuestionManager")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("QuestionarioManager");
                });

            modelBuilder.Entity("moduloAPI.Entities.QuestionarioManager", b =>
                {
                    b.HasOne("moduloAPI.Entities.Modulo", "Modulo")
                        .WithMany()
                        .HasForeignKey("IdModulo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Modulo");
                });

            modelBuilder.Entity("moduloAPI.Entities.Modulo", b =>
                {
                    b.Navigation("Aulas");
                });
#pragma warning restore 612, 618
        }
    }
}
